<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>A Commonplace Book</title>
        <link>https://exAClior.github.io/</link>
        <description>Yusheng Zhao&#39;s Commonplace Book</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>yushengzhao2020@outlook.com (Yusheng Zhao)</managingEditor>
            <webMaster>yushengzhao2020@outlook.com (Yusheng Zhao)</webMaster><lastBuildDate>Sat, 08 Jul 2023 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://exAClior.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Quantum Error Mitigation</title>
    <link>https://exAClior.github.io/posts/ibmquantumutil/</link>
    <pubDate>Sat, 08 Jul 2023 00:00:00 &#43;0000</pubDate>
    <author>Yusheng Zhao</author>
    <guid>https://exAClior.github.io/posts/ibmquantumutil/</guid>
    <description><![CDATA[Motivation IBM recently published a paper that carried out the Trotterized time evolution of a transverse-field Ising model Hamiltonian \(H = -J \sum_{&lt;i,j&gt;}Z_{i}Z_{j} + h \sum_{i}X_{i}\) on 127 qubits. The quantum circuit used for time evolution consisted of &#34;up to 60 layers of two-qubit gates, a total of 2880 CNOT gates&#34; [1]. This is a significant experiment due to the relatively low quality of CNOT gates across all currently available quantum computing platforms.]]></description>
</item>
<item>
    <title>Algebraic Data Type</title>
    <link>https://exAClior.github.io/posts/adt/</link>
    <pubDate>Tue, 04 Jul 2023 00:00:00 &#43;0000</pubDate>
    <author>Yusheng Zhao</author>
    <guid>https://exAClior.github.io/posts/adt/</guid>
    <description><![CDATA[Motivation In my ongoing project on ZX Calculus, I found myself needing an elegant and efficient way to handle objects of specific types and perform operations on their values. Enter Algebraic Data Types (ADTs) - a powerful concept from functional programming. ADTs, coupled with pattern matching, provide a solution that is not only efficient but also expressive, allowing for cleaner, more readable code when dealing with complex data structures.]]></description>
</item>
<item>
    <title>Algebraic Data Type Again</title>
    <link>https://exAClior.github.io/posts/adt2/</link>
    <pubDate>Tue, 04 Jul 2023 00:00:00 &#43;0000</pubDate>
    <author>Yusheng Zhao</author>
    <guid>https://exAClior.github.io/posts/adt2/</guid>
    <description><![CDATA[Motivation Last time, I went over the basics of Algebraic Data Types. In this short post, I want to explore more details and fundamental reasons why they exist.
Compiler perspective This relates to multi-dispatch of a function. If there&#39;s no algebraic data type or something similar, the compiler will not be able to iterate through all possible variants of a data type. Hence, it will not be able to perform checking to see if the program has bugs at compile time.]]></description>
</item>
<item>
    <title>Juliabeginner</title>
    <link>https://exAClior.github.io/posts/juliabeginner/</link>
    <pubDate>Wed, 07 Jun 2023 21:43:39 &#43;0800</pubDate>
    <author>Yusheng Zhao</author>
    <guid>https://exAClior.github.io/posts/juliabeginner/</guid>
    <description><![CDATA[Purpose In this blog, I have collected some tutorials that I found useful while learning Julia. I will also provide a tool-chain that I like to use while coding in Julia. I hope this will speed up your process of learning Julia.
Operating System This is not intended to be a cynical view or criticism against Windows users. However, it&rsquo;s worth considering the benefits of using Linux or macOS for your programming needs, especially when working with Julia.]]></description>
</item>
<item>
    <title>Introduction</title>
    <link>https://exAClior.github.io/posts/introduction/</link>
    <pubDate>Fri, 05 Aug 2022 18:49:34 &#43;0800</pubDate>
    <author>Yusheng Zhao</author>
    <guid>https://exAClior.github.io/posts/introduction/</guid>
    <description><![CDATA[Introduction Hello everyone , this is a very short introduction]]></description>
</item>
<item>
    <title></title>
    <link>https://exAClior.github.io/posts/collatz/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>Yusheng Zhao</author>
    <guid>https://exAClior.github.io/posts/collatz/</guid>
    <description><![CDATA[Statement Remember one of the problems in HW denoted as `3n+1` problem. It has another name as [Collatz Conjecture]]]></description>
</item>
<item>
    <title>Noise on Random Circuit Sampling</title>
    <link>https://exAClior.github.io/posts/testnoiseandrcs/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>Yusheng Zhao</author>
    <guid>https://exAClior.github.io/posts/testnoiseandrcs/</guid>
    <description><![CDATA[What is the importance of random circuit sampling Quantum supermacy, the quest for looking for a task that can be proven to be prohibitively hard for classical computer but easy for quantum computer, is the goal for many quantum information scientist.
To prove quantum supermacy, there are in general two categories of proposals. The first category is ones that can be proven to be hard complexity wise but challenging experiment-wise (need to look at Aaronson paper).]]></description>
</item>
</channel>
</rss>
